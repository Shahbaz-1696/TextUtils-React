{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","for","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","rows","value","onChange","event","target","backgroundColor","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","about","Alert","alert","role","word","lower","charAt","slice","capitalize","msge","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.c973cff8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">\r\n                {props.about}\r\n              </a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-primary\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode} \r\n            />\r\n            <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">\r\n              Enable Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  about: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState('');\r\n\r\n\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked: \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\", \"success\");\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppercase was clicked: \" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\", \"success\");\r\n  }\r\n\r\n  const handleClearClick = () => {\r\n    let newText = '';\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared\", \"success\");\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  // text = \"new text\" //Wrong way to update the state\r\n  // setText(\"new text\") //Correct way to update the state\r\n  return (\r\n    <>\r\n    <div className=\"container\"\r\n    style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n          value={text}\r\n          onChange = {handleOnChange}\r\n          style={{\r\n            backgroundColor: props.mode==='dark'?'grey':'white',\r\n            color: props.mode==='dark'?'white':'black'\r\n          }}\r\n          ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Conver to Uppercase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Conver to Lowercase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n\r\n    </div>\r\n    <div className=\"container my-3\"\r\n    style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1>Your text summary</h1>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes Read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter the text in the textbox above to preview it here.\"}</p>\r\n    </div>\r\n  </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n   props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>\r\n        {capitalize(props.alert.type)}:\r\n        </strong>{props.alert.msge}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msge: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\" Dark Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\" Light Mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Light Mode\";\n    }\n  };\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils2\" about=\"About TextUtils\" /> */}\n      {/* <Navbar /> */}\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes> */}\n\n        {/* <Route exact path=\"/about\" element={<About />} /> */}\n\n        <TextForm\n          heading=\"Enter the text to analyze below\"\n          mode={mode}\n          alert={alert}\n        />\n\n        {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}